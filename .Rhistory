# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "educexp_gov", "gov_party", "educatt_minimal")]
dim(cstat)
rownames(cstat) <- data$country
summary(cstat)
oecd<-oecd[,-1]
summary(cstat)
cstat<-cstat[,-1]
summary(cstat)
current <- all_data[all_data$year == 2021,]
head(current)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "educexp_gov", "gov_party", "educatt_minimal")]
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
current <- all_data[all_data$year == 2022,]
head(current)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "educexp_gov", "gov_party", "educatt_minimal")]
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
res.pca <- PCA(cstat, graph = FALSE)
print(res.pca)
library(car)
all_data <- read_dta("./CPDS_1960_2022_Update_2024.dta")
head(all_data)
current <- all_data[all_data$year == 2022,]
head(current)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "educexp_gov", "gov_party", "educatt_minimal")]
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
library(FactoMineR)
library(factoextra)
res.pca <- PCA(cstat, graph = FALSE)
print(res.pca)
fviz_pca_biplot(res.pca, repel = TRUE, col.var = "black", col.ind = "black", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), legend.title = "Country", addEllipses = TRUE, ellipse.level = 0.95)
print(res.pca)
res.pca$var
View(cstat)
cstat$poco <- as.factor(cstat$poco)
cstat$poco <- as.factor(cstat$poco)
cstat$eu <- as.factor(cstat$eu)
cstat$emu <- as.factor(cstat$emu)
cstat$emu <- as.factor(cstat$emu)
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
library(FactoMineR)
library(factoextra)
res.pca <- PCA(cstat, graph = FALSE)
print(res.pca)
fviz_pca_biplot(res.pca, repel = TRUE, col.var = "black", col.ind = "black", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), legend.title = "Country", addEllipses = TRUE, ellipse.level = 0.95)
res.pca$call
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
current <- all_data[all_data$year == 2022,]
head(current)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "educexp_gov", "gov_party", "educatt_minimal")]
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
summary(pca_res)
cstat<-cstat[,-1]
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
summary(pca_res)
pca_res
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
col.ind = current$country,
legend.title = "Countries"
)
pca_res <- prcomp(cstat[, 2:4], scale. = TRUE)
summary(pca_res)
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
col.ind = current$country,
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries"
)
biplot(pca_res)
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries"
)
biplot(pca_res)
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
summary(pca_res)
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "point",
geom.label = current$country,
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "point",
geom.label = current$country,
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "label",
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "label",
labels=current$country,
legend.title = "Countries"
)
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries"
)
library(mclust)
library(cluster)
library(factoextra)  # optional, but useful for visualizing gap statistics
library(mclust)
library(cluster)
library(factoextra)  # optional, but useful for visualizing gap statistics
data(iris)
iris_data <- iris[, 1:2]  # Sepal.Length, Sepal.Width
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 2. Model-based Clustering with Mclust
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mc_fit <- Mclust(iris_data)
# Print BIC values and selected model
mc_fit$BIC
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
pca_res <- prcomp(cstat[, 1:8], scale. = TRUE)
summary(pca_res)
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
fviz_pca_var(pca_res, col.var = "black", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
fviz_pca_var(pca_res, col.var = "black", repel = TRUE)
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
fviz_pca_var(pca_res, col.var = "black",   geom.ind = "point")
fviz_pca_var(pca_res,  geom.ind = "point")
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
fviz_pca_ind(
pca_res,
geom.ind = "point",
addEllipses = TRUE ,
)
fviz_pca_ind(
pca_res,
addEllipses = TRUE ,
)
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
biplot(pca_res)
?fviz_pca_ind
fviz_pca(pca_res)
View(cstat)
pca_res <- prcomp(cstat[, 4:9], scale. = TRUE)
summary(pca_res)
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
?fviz_pca_ind
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
fviz_pca(pca_res)
biplot(pca_res)
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
pca_res <- prcomp(cstat[, 4:8], scale. = TRUE)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "gov_party", "educatt_minimal")]
cstat$poco <- as.factor(cstat$poco)
cstat$eu <- as.factor(cstat$eu)
cstat$emu <- as.factor(cstat$emu)
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
library(FactoMineR)
library(factoextra)
res.pca <- PCA(cstat, graph = FALSE)
print(res.pca)
fviz_pca_biplot(res.pca, repel = TRUE, col.var = "black", col.ind = "black", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), legend.title = "Country", addEllipses = TRUE, ellipse.level = 0.95)
res.pca <- PCA(cstat, graph = FALSE)
res.pca <- imputePca(cstat, graph = FALSE)
library(missMDA)
res.pca <- imputePCA(cstat, graph = FALSE)
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "gov_party", "educatt_minimal")]
cstat$poco <- as.factor(cstat$poco)
cstat$eu <- as.factor(cstat$eu)
cstat$emu <- as.factor(cstat$emu)
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
library(FactoMineR)
library(factoextra)
res.pca <- PCA(cstat, graph = FALSE)
print(res.pca)
fviz_pca_biplot(res.pca, repel = TRUE, col.var = "black", col.ind = "black", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), legend.title = "Country", addEllipses = TRUE, ellipse.level = 0.95)
pca_res <- prcomp(cstat[, 1:4], scale. = TRUE)
summary(pca_res)
?prcomp
fviz_pca_ind(
pca_res,
geom.ind = "point",
legend.title = "Countries",
addEllipses = TRUE ,
)
?fviz_pca_ind
fviz_pca_var(pca_res, col.var = "black", repel = TRUE,   geom.ind = "point")
fviz_pca(pca_res)
biplot(pca_res)
# gov_party - gov_party Cabinet composition (Schmidt-Index): 0-100 -> 0 - right, 100 - socio-democratic
# receipts - government receipts (% of GDP)
# realgdpgr - Growth of real GDP, percent change from previous year
# inflation - Growth of harmonised consumer price index (CPI), all items, percent change from previous year; used as a measure for inflation
# take only the relevant columns
# deficit - Annual deficit (overall balance / net lending of general government) as a percentage of GDP.
# labfopar - Total labour force as a percentage of population 15-64 (participation rate).
# unemp- Unemployment rate, percentage of civilian labour force.
# educexp_gov - General government expenditure on education (current, capital and transfers) as a percentage of GDP.
# educatt_minimal - Share of population attending no more than secondary education
cstat <- current[,c("country", "poco", "eu", "emu", "receipts", "realgdpgr", "inflation", "deficit", "labfopar", "unemp", "gov_party", "educatt_minimal")]
cstat$poco <- as.factor(cstat$poco)
cstat$eu <- as.factor(cstat$eu)
cstat$emu <- as.factor(cstat$emu)
dim(cstat)
rownames(cstat) <- data$country
cstat<-cstat[,-1]
summary(cstat)
library(FactoMineR)
library(factoextra)
######
library(mclust)
library(cluster)
library(factoextra)
mc_fit <- Mclust(cstat)
# need to impute
pre <- preProcess(gc, method = 'knnImpute', k = 5)
library(caret)
library(lattice)
library(caret)
library(lattice)
# need to impute
pre <- preProcess(gc, method = 'knnImpute', k = 5)
# need to impute
pre <- preProcess(cstat, method = 'knnImpute', k = 5)
gc.imputed <- predict(pre, cstat)
imputed <- predict(pre, cstat)
library(nnet)
library(randomForest)
library(e1071)
library(MASS)
library(mlbench)
library(RANN)
# Caricamento del dataset "German Credit"
data("GermanCredit")
credit_data <- GermanCredit
gc <- GermanCredit
str(gc)
# visualize
featurePlot(x = gc[,1:4], y = gc$Class, plot = "pairs")
# calc mean, ignore na
duration.mean = mean(gc$Duration, na.rm = TRUE)
duration.sd = sd(gc$Duration, na.rm = TRUE)
duration
# https://www.youtube.com/watch?v=_J3s8TVVKhU&list=PL4d4SJWak48IDI-VHcltq_qXn09_tjQ13&ab_channel=MarioCastro
# impute missing values
pre <- preProcess(gc, method = 'knnImpute', k = 5)
gc.imputed <- predict(pre, gc)
# need to impute
pre <- preProcess(cstat, method = 'knnImpute', k = 5)
imputed <- predict(pre, cstat)
# need to impute
pre <- preProcess(as.data.frame(cstat), method = 'knnImpute', k = 5)
imputed <- predict(pre, cstat)
imputed
cstat
summary(cstat)
imputed$gov_party
mc_fit <- Mclust(imputed)
summary(mc_fit)
View(imputed)
mc_fit <- Mclust(imputed[,2:5])
summary(mc_fit)
mc_fit <- Mclust(cstat[,2:5])
summary(mc_fit)
View(cstat)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:13]), method = 'knnImpute', k = 4)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:11]), method = 'knnImpute', k = 4)
imputed <- predict(pre, cstat)
imputed
mc_fit <- Mclust(imputed[,2:5])
summary(mc_fit)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:11]), method = 'knnImpute', k = 4)
imputed <- predict(pre, cstat)
summary(imputed)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:11]), method = 'knnImpute', k = 4)
imputed <- predict(pre, cstat[,4:11])
summary(imputed)
mc_fit <- Mclust(imputed[,2:5])
summary(mc_fit)
mc_fit <- Mclust(imputed)
summary(mc_fit)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:6]), method = 'knnImpute', k = 4)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:6]), method = 'knnImpute', k = 4)
imputed <- predict(pre, cstat[,4:6])
imputed
summary(imputed)
mc_fit <- Mclust(imputed)
summary(mc_fit)
plot(mc_fit, what = "classification")
plot(mc_fit)
plot(mc_fit)
plot(mc_fit)
d <- dist(imputed) # Euclidean distance by default
sil_mclust <- silhouette(2 , d)
summary(sil_mclust)
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters")
d <- dist(imputed) # Euclidean distance by default
sil_mclust <- silhouette(2 , d)
summary(sil_mclust)
sil_mclust <- silhouette(4 , d)
summary(sil_mclust)
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters")
d <- dist(imputed) # Euclidean distance by default
sil_mclust <- silhouette(1 , d)
summary(sil_mclust)
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters")
sil_mclust <- silhouette(3 , d)
summary(sil_mclust)
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters")
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters", min=-1, max=1)
# need to impute
pre <- preProcess(as.data.frame(cstat[,4:5]), method = 'knnImpute', k = 4)
imputed <- predict(pre, cstat[,4:5])
imputed
summary(imputed)
mc_fit <- Mclust(imputed)
summary(mc_fit)
plot(mc_fit)
mc_fit <- Mclust(imputed)
summary(mc_fit)
plot(mc_fit)
sil_mclust <- silhouette(3 , d)
summary(sil_mclust)
# Plot the silhouette
plot(sil_mclust, main = "Silhouette Plot for Mclust Clusters")
road_data <- read.csv("./data/road_data.csv")
road_data <- read.csv("data/road_data.csv")
pwd
road_data <- read.csv("/Users/aleksandrazografska/r-scripts/statistical-learning-proj/data/road_data.csv")
list.files(path = "test", pattern = ".csv", full.names = TRUE)
list.files(path = "test", pattern = ".csv", full.names = TRUE)
list.files(path = "test", pattern = ".csv", full.names = TRUE)[0]
list.files(path = "test", pattern = ".csv", full.names = TRUE)[1]
list.files(path = "data", pattern = ".csv", full.names = TRUE)[1]
road_data <- read.csv("data/road-data.csv")
road_data
dim(road_data)
unfiltered_road_data <- read.csv("data/road-data.csv")
unfiltered_road_data
dim(unfiltered_road_data)
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference","accident_severity", "number_of_vehicles", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
unfiltered_road_data <- read.csv("data/road-data.csv")
unfiltered_road_data
dim(unfiltered_road_data)
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference","accident_severity", "number_of_vehicles", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[:,c("accident_reference","vehicle_reference","accident_severity", "number_of_vehicles", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference","accident_severity", "number_of_vehicles", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference","accident_severity")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference"]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference",  "number_of_vehicles", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference",  "number_of_vehicles")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference","number_of_vehicles")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", )]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions" )]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties", "day_of_week", "enhanced_collision_severity")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties", "day_of_week")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "number_of_casualties")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "enhanced_collision_severity", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions", "vehicle_type", "urban_or_rural")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "road_type", "speed_limit", "weather_conditions", "road_surface_conditions")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "road_type", "speed_limit", "weather_conditions",)]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "road_type", "speed_limit", "weather_conditions")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week", "road_type")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference", "day_of_week")]
road_data <- unfiltered_road_data[,c("accident_reference","vehicle_reference")]
summarry(road_data)
summary(unfiltered_road_data)
dim(unfiltered_road_data)
